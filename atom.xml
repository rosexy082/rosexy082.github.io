<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李阳的秘密小屋</title>
  
  <subtitle>hello，✌</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-02-07T11:52:21.937Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>李阳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>专升本小蓝书语法知识总结</title>
    <link href="http://example.com/2024/02/07/%E4%B8%93%E5%8D%87%E6%9C%AC%E5%B0%8F%E8%93%9D%E4%B9%A6%E8%AF%AD%E6%B3%95%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2024/02/07/%E4%B8%93%E5%8D%87%E6%9C%AC%E5%B0%8F%E8%93%9D%E4%B9%A6%E8%AF%AD%E6%B3%95%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</id>
    <published>2024-02-07T07:34:21.000Z</published>
    <updated>2024-02-07T11:52:21.937Z</updated>
    
    <content type="html"><![CDATA[<h1 id="专升本小蓝书语法知识总结（课上"><a href="#专升本小蓝书语法知识总结（课上" class="headerlink" title="专升本小蓝书语法知识总结（课上)"></a>专升本小蓝书语法知识总结（课上)</h1><h3 id="一、基本句型"><a href="#一、基本句型" class="headerlink" title="一、基本句型"></a>一、基本句型</h3><h4 id="定语"><a href="#定语" class="headerlink" title="定语"></a>定语</h4><p>1.前置定语:限定词、形容词、名词、单个分词。<br>2.后置定语:定语从句、分词短语、形容词短语、介词短语、不定式（短语)。<br>3.摆放顺序:限定词+形容词+中心名词+介词短语&#x2F;分词短语&#x2F;不定式短语&#x2F;形容词短语&#x2F;定语从句等其中。<br>*当多个形容词同时出现在名词之前，我们要注意其次序。其形容词遵循的词序为:龄色国材，限（表限定的形容词，一般指数量)，观（外观，美丽等);形（形状，大小、长短、高矮、肥瘦)，龄（年龄、新旧、年代);色（颜色，红黄蓝白黑);国（国籍);料(材料);用途。</p><p>*写句子前，先判断句子中存在多少个定语，再将其进行排序。 </p><span id="more"></span>    <h5 id="名词作定语的特点"><a href="#名词作定语的特点" class="headerlink" title="名词作定语的特点"></a>名词作定语的特点</h5><p><strong>1</strong>.英语中的不可数名词和大多数的可数名词（单数形式）可以直接用来作定语  例如:①fire fighter消防员 ②history book历史书r</p><p><strong>2</strong>英语中有些名词总是以复数的形式出现并使用的，如clothes衣服、glasses眼镜、goods 货物、customs海关、trousers裤子等，例如:①glasses case眼镜盒，②clothes store服装店</p><p><strong>3</strong>.注意名词作定语和名词所有格的区别例如:①the student canteen学生食堂  the students canteen学生的食堂①中 student是名词作定语修饰canteen，强调食堂的功能，意为“学生”，例如学校中分为教室食堂和学生食堂;②中 student’s是名词所有格，强调所属关系，意为“学生的食堂”，例如学校中某一个为学生自己开了一家食堂。</p><p><strong>补充</strong>:如果主语是无生命名词，要表示所属关系，则需要借助of短语，例如“书的名字”，</p><h4 id="副词"><a href="#副词" class="headerlink" title="副词"></a>副词</h4><h5 id="副词作状语的摆放顺序"><a href="#副词作状语的摆放顺序" class="headerlink" title="副词作状语的摆放顺序"></a>副词作状语的摆放顺序</h5><p>（1）英文中副词一般位于句首或句末，例如:l ought to learn English well.</p><p>(2）英文中若动词含有be动词则副词放置在be动词后，例如;He is indeed a handsome man.</p><p>(3）英文中若第一个动词是助动词(或情态动词）时，副词则放在助动词（或情态动词)后:I will surely get good grades.</p><p>(4）英文中若动词为实意动词，副词则放在实意动词前或实意动词的宾语后:She carefully listened to the teacher.</p><h4 id="分析顺序"><a href="#分析顺序" class="headerlink" title="分析顺序"></a>分析顺序</h4><p>1.找到句子的主干</p><p>2.什么作主语;什么作谓语;什么作宾语;什么作表语</p><p>3.写出主干</p><p>4.找出修饰成分</p><p>5.是否存在定语?找出所有的定语</p><p>6.分别是什么作定语?应该如何写?进行排序</p><p>7.是否存在状语?</p><p>8.分别是什么作状语?应该如何写?进行排序</p><p>9.所有的成分拼接在一起</p><p>本句话的主干是 ________ ，其中主语是 ________ ，词性是________ ，用________ 作主语；谓语是________ ，词性是________ ，用________ 作谓语；宾（表）语是________ ，词性是________ ，用________ 作宾（表）语；将主谓宾连起来是________________ ，句子中有________ 个定语，第一个定语是________ ，应该用________词性 ________ 词来充当这个定语，放在被修饰词的________ ，第二个定语是________ ，应该用________词性 ________ 词来充当这个定语，放在被修饰词的________ ，句子中有________ 个状语，第一个状语是________ ，应该用________词性 ________ 词来充当这个状语，放在________ ，第二个状语是________ ，应该用________词性 ________ 词来充当这个状语，放在________ ，最终的句子是________________________________________________。</p><p><img src="/2024/02/07/%E4%B8%93%E5%8D%87%E6%9C%AC%E5%B0%8F%E8%93%9D%E4%B9%A6%E8%AF%AD%E6%B3%95%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/Blog/blog/source/_posts/english/1.png"></p><h3 id="第二期"><a href="#第二期" class="headerlink" title="第二期"></a>第二期</h3><p>第一课</p><h5 id="第五课"><a href="#第五课" class="headerlink" title="第五课"></a>第五课</h5><p>would do 过去常常做sth</p><p>earn</p><p>make money 赚钱</p><p>earn one’s living   谋生</p><p>approach v.靠近，接近  n.方法</p><p>argue with  和某人争论</p><p>argue about   争论某事</p><p>engage in    从事，参与</p><p>lighten 减轻</p><p>in public 公开地，公共场所</p><p>in secret 秘密地</p><p>in detail 详细地</p><p>in short 简短地</p><p>in common 常见的</p><p>ask sb. to do sth. 要求某人做某事</p><p>ask for 要求请求</p><p>ask about 询问</p><p>identity 身份id</p><p>assess</p><p>it is difficult to assess… as…评价</p><p>assessment 评估、评定、评价</p><p>access入口</p><p>have access to 有权使用</p><p>operations</p><p>operation 手术，操作</p><p>operate 做手术、操作</p><p>mind doing 介意做某事</p><p>mind to do </p><p>means doing 意味着…</p><p>means to do 打算做某事</p><p>be divided into…</p><p>performance 表现、表扬</p><p>agent </p><p>brand</p><p>out of breath</p><p>surround</p><p>avoid </p><p>replace</p><p>save 储存、拯救</p><p>place v.放置</p><p>avoid doing 避免做某事</p><p>department</p><p>hold on 坚持，抓住，不要挂电话</p><p>hold back 抑制、阻止</p><p>hold up 举起</p><p>stared at 整理</p><p>bring up 抚养</p><p>build up 建立，堆放</p><p>must do</p><p>must have done</p><p>mustn’t do</p><p>mustn’t have done没有</p><h5 id="第六课"><a href="#第六课" class="headerlink" title="第六课"></a>第六课</h5><p>settle down</p><p>managed to</p><p>mange to do 设法做&#x2F;成功做sth.</p><p>put up with 忍受</p><p>come up with 提出，想出</p><p>keep up with  保持，跟上</p><p>catch up with 赶上（通过努力)</p><p>promoted</p><p>promote 促进，促销，升职</p><p>search 搜索</p><p>research 研究</p><p>agriculture 农业</p><p>recent 最近的</p><p>recently 最近</p><p>submission 屈服</p><p>subway 地铁</p><p>marine 海洋</p><p>subtitle 副标题</p><p>title 标题，头衔</p><p>different</p><p>difference</p><p>indifference 漠不关心的</p><p>warmth</p><p>outstanding</p><p>tender</p><p>determination</p><p> tender to do 倾向做sth.</p><p>added to</p><p>strange 奇怪的，陌生的</p><p>mysterious</p><p>addition 增加</p><p>additional 额外的</p><p>nation民族，国家</p><p>national国家的，民族的</p><p>person 个人</p><p>personal 个人的</p><p>atmosphere 大气层</p><p>it is of… 他很…</p><p>it is of the most important to build …</p><p>tendency</p><p>thunder</p><p>sleep late 睡懒觉</p><p>stay up熬夜</p><p>along with</p><p>associate with</p><p>Be equipped with …装备…</p><p>Keep in touch&#x2F;contact with …保持联系</p><p>Stay in touch&#x2F;contact with …保持联系</p><p>Get in touch&#x2F;contact with …保持联系</p><p>set about doing着手做某事</p><p>Set about to do着手做某事</p><p>Sat out to do着手做某事</p><p>Turn to求助于，转向</p><p>Turn up出现，开大，调大</p><p>Turn down拒绝，调小</p><p>Turn on打开</p><p>Turn off关闭</p><p>Turn around转一圈，转身</p><p>Turn over交接</p><p>Turn A … into B…把A变成B</p><p>turn out 结果</p><p>turn out to be 结果是</p><p>sooner or later</p><p>stop to do 停下来，去做某事</p><p>stop doing 停下正在做的事情</p><p>remember to do sth. 记得要去做某事</p><p>remember doing 记得做过某事</p><p>takes off</p><h5 id="第六课-1"><a href="#第六课-1" class="headerlink" title="第六课"></a>第六课</h5><p>Keep in touch&#x2F;contact with 与…保持联系</p><p>Stay in touch&#x2F;contact with 与…保持联系</p><p>Get in touch&#x2F;contact with 与…保持联系</p><p>rely on</p><p>obey</p><p>out of order</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;专升本小蓝书语法知识总结（课上&quot;&gt;&lt;a href=&quot;#专升本小蓝书语法知识总结（课上&quot; class=&quot;headerlink&quot; title=&quot;专升本小蓝书语法知识总结（课上)&quot;&gt;&lt;/a&gt;专升本小蓝书语法知识总结（课上)&lt;/h1&gt;&lt;h3 id=&quot;一、基本句型&quot;&gt;&lt;a href=&quot;#一、基本句型&quot; class=&quot;headerlink&quot; title=&quot;一、基本句型&quot;&gt;&lt;/a&gt;一、基本句型&lt;/h3&gt;&lt;h4 id=&quot;定语&quot;&gt;&lt;a href=&quot;#定语&quot; class=&quot;headerlink&quot; title=&quot;定语&quot;&gt;&lt;/a&gt;定语&lt;/h4&gt;&lt;p&gt;1.前置定语:限定词、形容词、名词、单个分词。&lt;br&gt;2.后置定语:定语从句、分词短语、形容词短语、介词短语、不定式（短语)。&lt;br&gt;3.摆放顺序:限定词+形容词+中心名词+介词短语&amp;#x2F;分词短语&amp;#x2F;不定式短语&amp;#x2F;形容词短语&amp;#x2F;定语从句等其中。&lt;br&gt;*当多个形容词同时出现在名词之前，我们要注意其次序。其形容词遵循的词序为:龄色国材，限（表限定的形容词，一般指数量)，观（外观，美丽等);形（形状，大小、长短、高矮、肥瘦)，龄（年龄、新旧、年代);色（颜色，红黄蓝白黑);国（国籍);料(材料);用途。&lt;/p&gt;
&lt;p&gt;*写句子前，先判断句子中存在多少个定语，再将其进行排序。 &lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>c语言</title>
    <link href="http://example.com/2023/05/25/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/05/25/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-05-25T07:34:21.000Z</published>
    <updated>2023-09-04T09:44:34.103Z</updated>
    
    <content type="html"><![CDATA[<h1 id="c语言"><a href="#c语言" class="headerlink" title="c语言"></a>c语言</h1><h3 id="1-初识C语言"><a href="#1-初识C语言" class="headerlink" title="1.初识C语言"></a>1.初识C语言</h3><p>c语言是<strong>结构化</strong>的程序设计—-顺序结构，选择结构，循环结构</p><span id="more"></span><p>一、</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">eg:</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><p>程序从main函数开始执行，且只有一个</p></li><li><p>return 返回0,int是整型，然后返回一个整型0</p></li><li><p>print f 打印函数   \n换行</p></li><li><p>#include   包含一个名字叫stdio.h的文件</p></li></ol><h6 id="二、数据类型"><a href="#二、数据类型" class="headerlink" title="二、数据类型"></a>二、数据类型</h6><p>char     字符  ‘ ‘   打印字符   %c打印字符格式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> ch = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,ch);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>int 整型    %d</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> age = <span class="number">20</span>;<span class="comment">//%d</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,age);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>%f–浮点型     %lf–double型   %p—以地址打印    %x—打印16进制</p><p>%c在C语言中代表字符型格式符</p><p>%s在C语言中代表字符串型格式符</p><p>​    ②  <strong>字符占用长度</strong></p><table><thead><tr><th align="left">字符</th><th align="left">字节（8个比特位）</th></tr></thead><tbody><tr><td align="left">char</td><td align="left">1</td></tr><tr><td align="left">short</td><td align="left">2</td></tr><tr><td align="left">int</td><td align="left">4</td></tr><tr><td align="left">long</td><td align="left">4</td></tr><tr><td align="left">long long</td><td align="left">8</td></tr><tr><td align="left">float</td><td align="left">4</td></tr><tr><td align="left">double</td><td align="left">8</td></tr></tbody></table><h6 id="三、键盘输入函数—–scanf"><a href="#三、键盘输入函数—–scanf" class="headerlink" title="三、键盘输入函数—–scanf()"></a>三、键盘输入函数—–scanf()</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从键盘输入求和</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> num1 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入两个数\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;num,&amp;num1 );</span><br><span class="line">sum = num + num1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;结果是%d&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="四、变量的作用域和生命周期"><a href="#四、变量的作用域和生命周期" class="headerlink" title="四、变量的作用域和生命周期"></a>四、变量的作用域和生命周期</h6><p>  <strong>作用域（scope）</strong>，程序设计概念，通常来说一段代码中所用到的名字并不是总是有效的，而限定这个名字的可用性的代码范围就是这个名字的作用域。</p><p><strong>生命周期</strong>，变量的生命周期是指变量的创建到变量销毁的一个时间段</p><h6 id="五、常量"><a href="#五、常量" class="headerlink" title="五、常量"></a>五、常量</h6><ul><li>字面常量</li><li>const修饰的常变量</li></ul><p>​            将变量转换为不可变的固定常量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> num=<span class="number">6</span>;</span><br></pre></td></tr></table></figure><p>​            相当于java的fianily</p><ul><li><p>#define定义的标识符常量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 10</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> arr[MAX] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;结果是%d&quot;</span>, MAX);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>枚举常量</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Sex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">MALE,</span><br><span class="line">FEMALA,</span><br><span class="line">SECRET</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//enum Sex s=MALE;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;结果是%d&quot;</span>, MALE);<span class="comment">//0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;结果是%d&quot;</span>, FEMALA);<span class="comment">//1</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;结果是%d&quot;</span>, SECRET);<span class="comment">//2</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="字符串的打印"><a href="#字符串的打印" class="headerlink" title="字符串的打印"></a>字符串的打印</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="type">char</span> arr2[] = &#123; <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,arr1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, arr2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**  \0  表示字符串的结束符</p><p>1.strlen()–字符串统计函数  string length–计算字符串长度</p><p><img src="/2023/05/25/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230402145454188.png"></p><p>eg:arr2的abc后面放着一个随机值–直到0为止</p><h5 id="二、循环语句"><a href="#二、循环语句" class="headerlink" title="二、循环语句"></a>二、循环语句</h5><h6 id="1、if–else"><a href="#1、if–else" class="headerlink" title="1、if–else"></a>1、if–else</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你要好好学习吗(1/0)&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line"><span class="keyword">if</span> (input == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;要好好学习&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;不要&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-while循环"><a href="#2-while循环" class="headerlink" title="2.while循环"></a>2.while循环</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> line = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (line &lt;= <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;敲了一行代码%d\n&quot;</span>,line);</span><br><span class="line">line++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你已经是大牛啦&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h5 id="三、方法"><a href="#三、方法" class="headerlink" title="三、方法"></a>三、方法</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Add</span><span class="params">(<span class="type">int</span> x , <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> z = x + y;</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num1= <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> num2 = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">sum = Add(num1, num2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;结果是%d&quot;</span>, sum);</span><br><span class="line">sum = Add(a, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sun = %d\n&quot;</span>, sum);</span><br><span class="line">       <span class="comment">//用户输入</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;c,%d)</span><br><span class="line">        <span class="type">int</span> sum=Add(c,d)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sun)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>add()自定义函数</p><h5 id="四、数组"><a href="#四、数组" class="headerlink" title="四、数组"></a>四、数组</h5><p>int arr[10]&#x3D;{1,2,3,4,5}</p><p>打印数组所有元素</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">10</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>(i&lt;<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%D&quot;</span>,arr[i]);</span><br><span class="line">    i=i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="五、异或非"><a href="#五、异或非" class="headerlink" title="五、异或非"></a>五、异或非</h5><p><strong>^</strong>  异或：对应的二进制相同则为0，相异则为1</p><p><strong>给你们句口诀与：全一则一 或：有一则一 异或：有一则一全一则零</strong></p><h5 id="六、常见关键字"><a href="#六、常见关键字" class="headerlink" title="六、常见关键字"></a>六、常见关键字</h5><p><img src="/2023/05/25/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230523100459368-1684807509870-1.png" alt="image-20230523100459368"></p><h6 id="typedef关键字"><a href="#typedef关键字" class="headerlink" title="typedef关键字"></a>typedef关键字</h6><p>typedef:类型定义，这里理解为类型重命名</p><p>例:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将unsigeng int 重命名为unit,所以unit也是一个类型名</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> unit;</span><br><span class="line"><span class="type">int</span> main</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> num =<span class="number">0</span>;</span><br><span class="line">uint num1=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>unsigned int 相当于 uint</p><h6 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h6><p>用来修饰变量和函数的</p><p>1.修饰局部变量-称为静态局部变量</p><p>2.修饰全局变量-称为静态全局变量 </p><p>3.修饰函数-称为静态函数</p><p>①</p><p><img src="/2023/05/25/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20230523103200606.png" alt="image-20230523103200606"></p><p>修饰局部变量时改变了变量存储位置，修饰全局变量时这个属性变成内部链接属性，其他源文件不能使用</p><h6 id="register关键字–寄存器"><a href="#register关键字–寄存器" class="headerlink" title="register关键字–寄存器"></a>register关键字–寄存器</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="type">int</span> num=<span class="number">3</span><span class="comment">//register建议3存放在寄存器中</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="七、指针"><a href="#七、指针" class="headerlink" title="七、指针"></a>七、指针</h5><h6 id="7-1内存"><a href="#7-1内存" class="headerlink" title="7.1内存"></a>7.1内存</h6><p>指针也就是内存地址，指针变量是用来存放内存地址的变量</p><p>指针变量是用来存放地址的</p><p>指针变量的大小取决于一个地址存放时需要多大空间</p><p>32位上指针变量大小是4个字节 64位指针变量大小8个字节</p><h5 id="八、结构体–struct"><a href="#八、结构体–struct" class="headerlink" title="八、结构体–struct"></a>八、结构体–struct</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//成员</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">char</span> sex[<span class="number">10</span>];</span><br><span class="line">    <span class="type">char</span> tele[<span class="number">12</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">s</span>=</span> &#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="number">20</span>,<span class="string">&quot;nan&quot;</span>,<span class="string">&quot;1231231&quot;</span>&#125;;</span><br><span class="line">    <span class="comment">//结构体对象.成员名</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %d %s %s\n&quot;</span>,s.name,s.age,s.sex,s.tele)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码优化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//成员</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">char</span> sex[<span class="number">10</span>];</span><br><span class="line">    <span class="type">char</span> tele[<span class="number">12</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span> <span class="params">(<span class="keyword">struct</span> Stu* ps)</span><span class="comment">//s的地址</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %d %s %s\n&quot;</span>,(*ps).name,(*ps).age,(*ps).sex,(*ps).tele);<span class="comment">//（*ps)代表s</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Stu</span> <span class="title">s</span>=</span> &#123;<span class="string">&quot;zhangsan&quot;</span>,<span class="number">20</span>,<span class="string">&quot;nan&quot;</span>,<span class="string">&quot;1231231&quot;</span>&#125;;</span><br><span class="line">   <span class="comment">// //结构体对象.成员名</span></span><br><span class="line">   <span class="comment">// printf(&quot;%s %d %s %s\n&quot;,s.name,s.age,s.sex,s.tele)</span></span><br><span class="line">    print(&amp;s);<span class="comment">//打印s的地址</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、初阶C语言"><a href="#二、初阶C语言" class="headerlink" title="二、初阶C语言"></a>二、初阶C语言</h3><h5 id="一、分支和循环语句"><a href="#一、分支和循环语句" class="headerlink" title="一、分支和循环语句"></a>一、分支和循环语句</h5><h6 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h6><ul><li>if</li><li>switch</li></ul><p>循环语句</p><ul><li>while</li><li>for</li><li>do while</li></ul><p>goto语句</p><h5 id="1-1什么是语句？"><a href="#1-1什么是语句？" class="headerlink" title="1.1什么是语句？"></a>1.1什么是语句？</h5><p>c语言可以分为以下五类</p><ol><li>表达式语句</li><li>函数调用语句</li><li>控制语句</li><li>复合语句</li><li>空语句</li></ol><p><strong>控制语句</strong>用于控制程序的执行流程，以实现程序的各种结构方式，它由特定语句定义                                                                                                                                                                                                                                                                                                                                                                                                                                              </p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;c语言&quot;&gt;&lt;a href=&quot;#c语言&quot; class=&quot;headerlink&quot; title=&quot;c语言&quot;&gt;&lt;/a&gt;c语言&lt;/h1&gt;&lt;h3 id=&quot;1-初识C语言&quot;&gt;&lt;a href=&quot;#1-初识C语言&quot; class=&quot;headerlink&quot; title=&quot;1.初识C语言&quot;&gt;&lt;/a&gt;1.初识C语言&lt;/h3&gt;&lt;p&gt;c语言是&lt;strong&gt;结构化&lt;/strong&gt;的程序设计—-顺序结构，选择结构，循环结构&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>javaweb-黑马笔记</title>
    <link href="http://example.com/2023/05/25/JavaWeb/"/>
    <id>http://example.com/2023/05/25/JavaWeb/</id>
    <published>2023-05-25T07:34:21.000Z</published>
    <updated>2023-06-07T06:22:34.972Z</updated>
    
    <content type="html"><![CDATA[<h1 id="javaweb–黑马笔记"><a href="#javaweb–黑马笔记" class="headerlink" title="javaweb–黑马笔记"></a>javaweb–黑马笔记</h1><span id="more"></span><h5 id="一、学习路线"><a href="#一、学习路线" class="headerlink" title="一、学习路线"></a>一、学习路线</h5><p><img src="/2023/05/25/JavaWeb/image-20230419152717191.png" alt="image-20230419152717191"></p><h5 id="二、web介绍"><a href="#二、web介绍" class="headerlink" title="二、web介绍"></a>二、web介绍</h5><h6 id="一、什么是Web？"><a href="#一、什么是Web？" class="headerlink" title="一、什么是Web？"></a>一、什么是Web？</h6><p>web:全球广域网，也称万维网（www world wide web)，能够通过浏览器访问的网站</p><h6 id="二、web访问工作流程"><a href="#二、web访问工作流程" class="headerlink" title="二、web访问工作流程"></a>二、web访问工作流程</h6><p>用户在浏览器发送域名请求，浏览器向前端服务器发送请求，前端服务器收到请求后会将前端代码相应到浏览器，浏览器解析前端发送的代码，从而展示出前端样式，当浏览器解析到前端发送的请求路径，就会访问部署在后端的java程序，后端程序会访问数据库，数据获取之后会响应给后端服务器，后端服务器再将数据响应给浏览器</p><p><img src="/2023/05/25/JavaWeb/image-20230419154526105.png" alt="image-20230419154526105"></p><h6 id="三、web组成"><a href="#三、web组成" class="headerlink" title="三、web组成"></a>三、web组成</h6><p>Html:负责页面结构（页面元素和内容）</p><p>Css:负责网页的表现（页面元素的外观，位置等页面样式，如：颜色，大小等）</p><p>JavaScript:负责网页的的行为（交互效果）</p><h6 id="四、js"><a href="#四、js" class="headerlink" title="四、js"></a>四、js</h6><p><img src="/2023/05/25/JavaWeb/image-20230422202720089.png" alt="image-20230422202720089"></p><p>函数</p><p><img src="/2023/05/25/JavaWeb/image-20230422204846551.png" alt="image-20230422204846551"></p><p>json</p><p><img src="/2023/05/25/JavaWeb/image-20230422205518035.png" alt="image-20230422205518035"></p><p>BOM</p><p><img src="/2023/05/25/JavaWeb/image-20230422205849679.png" alt="image-20230422205849679"></p><p>获取元素</p><p>根据id获取 document.getElementById(‘ ‘)</p><p>根据标签获取  document.getElementsByTagName(‘ ‘)</p><p>根据name属性获取表签 document.getElementByName(‘ ‘)</p><p>根据class属性获取  document.getElemetByName(‘ ‘)</p><h5 id="五、vue"><a href="#五、vue" class="headerlink" title="五、vue"></a>五、vue</h5><p><img src="/2023/05/25/JavaWeb/image-20230425184810810.png" alt="image-20230425184810810"></p><h5 id="六、ajax"><a href="#六、ajax" class="headerlink" title="六、ajax"></a>六、ajax</h5><p>概念：Asynchronous JavaScript And XML，异步的javascripe和xml</p><p>作用：</p><ul><li>​     数据交换：通过ajax可以给服务器发送请求，并获取服务器的响应的数据</li><li>异步交互：可以在不重新加载整个页面的情况下，与服务器交换数据并更新部分网页技术:如 搜索联想，用户名校验</li></ul><p> Axios</p><p><img src="/2023/05/25/JavaWeb/image-20230505171524405.png" alt="image-20230505171524405"></p><h3 id="java后端路线"><a href="#java后端路线" class="headerlink" title="java后端路线"></a>java后端路线</h3><h5 id="一、maven"><a href="#一、maven" class="headerlink" title="一、maven"></a>一、maven</h5><p><img src="/2023/05/25/JavaWeb/image-20230516172514702.png" alt="image-20230516172514702"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;javaweb–黑马笔记&quot;&gt;&lt;a href=&quot;#javaweb–黑马笔记&quot; class=&quot;headerlink&quot; title=&quot;javaweb–黑马笔记&quot;&gt;&lt;/a&gt;javaweb–黑马笔记&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Maven笔记</title>
    <link href="http://example.com/2023/05/25/Maven/"/>
    <id>http://example.com/2023/05/25/Maven/</id>
    <published>2023-05-25T07:34:21.000Z</published>
    <updated>2023-06-07T06:31:51.171Z</updated>
    
    <content type="html"><![CDATA[<h1 id="day01-Maven"><a href="#day01-Maven" class="headerlink" title="day01-Maven"></a>day01-Maven</h1><h2 id="一-Maven简介"><a href="#一-Maven简介" class="headerlink" title="一.Maven简介"></a>一.Maven简介</h2><h3 id="1-Maven是什么？"><a href="#1-Maven是什么？" class="headerlink" title="1.Maven是什么？"></a>1.Maven是什么？</h3><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> 1）项目的自动构建工具，帮助开发人员做项目代码的编译，测试， 打包，安装，部署等工作。</span><br><span class="line"></span><br><span class="line"> 2）管理依赖（管理项目中使用的各种jar包）。</span><br><span class="line">    依赖：项目中需要使用的其他资源，  常见的是jar 。</span><br><span class="line">     比如项目要使用mysql驱动。我们就说项目依赖mysql驱动。</span><br><span class="line"></span><br><span class="line">总结：maven是一个项目管理工具  ，主要管理的是  开发 ，测试，打包</span><br></pre></td></tr></table></figure><p><strong>1.项目开发的各个阶段</strong></p><p>需要分析： 分析项目具体完成的功能，有什么要求， 具体怎么实现。</p><p>设计阶段：根据分析的结果， 设计项目的使用什么技术， 解决难点。</p><p>开发阶段：编码实现功能。 编译代码。自我测试</p><p>测试阶段：专业的测试人员，测整个项目的功能十分符合设计要求。出一个测试报告。</p><p>项目的打包，发布阶段： 给用户安装项目</p><p><strong>侧重管理的是开发过程中jar包的导入方式</strong></p><p><strong>2.涉及到的几个概念：仓库</strong> </p><ol><li>什么是中央仓库：<a href="https://mvnrepository.com/">https://mvnrepository.com/</a></li><li>什么是私服</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​3.什么是本地仓库</p><h3 id="2-为什么要用Maven"><a href="#2-为什么要用Maven" class="headerlink" title="2. 为什么要用Maven"></a>2. 为什么要用Maven</h3><p><strong>maven优点：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">更方便的管理jar包：</span><br><span class="line"><span class="number">1</span>.导入更方便  </span><br><span class="line"><span class="number">2</span>.升级维护更方便</span><br><span class="line"><span class="number">3</span>.减少内存冗余</span><br></pre></td></tr></table></figure><p>对比传统的项目和maven项目：</p><p>1.打开一个ssm的jar包的项目，一行代码没写，空的框架，jar包就有50多M</p><p>2.企业里是团队开发，人手一个ssm项目</p><h3 id="3-maven中常用的概念"><a href="#3-maven中常用的概念" class="headerlink" title="3. maven中常用的概念"></a>3. maven中常用的概念</h3><p>①POM<br>②约定的目录结构<br>③坐标<br>④依赖管理<br>⑤仓库管理<br>⑥生命周期<br>⑦插件和目标<br>⑧继承<br>⑨聚合</p><h2 id="二-Maven的安装和下载"><a href="#二-Maven的安装和下载" class="headerlink" title="二.Maven的安装和下载"></a>二.Maven的安装和下载</h2><h4 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h4><p>地址： <a href="http://maven.apache.org/">http://maven.apache.org/</a>  从中下载  .zip文件。 使用的 apache-maven-3.5.4-bin.zip</p><p><img src="/2023/05/25/Maven/image-20230114163512565.png" alt="image-20230114163512565"></p><h4 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h4><h5 id="2-1-配置环境变量"><a href="#2-1-配置环境变量" class="headerlink" title="2.1 配置环境变量"></a>2.1 配置环境变量</h5><ol><li><p>确定JAVA_HOME 指定jdk的安装目录， 如果没有JAVA_HOME， 需要在windows的环境变量中创建JAVA_HOME, 它的值是jdk的安装目录</p></li><li><p>解压缩  apache-maven-3.5.4-bin.zip ，把解压后的文件放到一个目录中。 </p><p>目录的路径不要有中文， 不要有空格。</p></li><li><p>在环境变量中，创建一个叫做MAVEN_HOME(或者M2_HOME) ，它的值是maven的安装目录</p><p>MAVEN_HOME&#x3D;D:\tools\apache-maven-3.5.4</p><p><img src="/2023/05/25/Maven/image-20230114163135587.png" alt="image-20230114163135587" style="zoom: 33%;"><img src="/2023/05/25/Maven/image-20230114163247141.png" alt="image-20230114163247141" style="zoom:50%;"></p></li><li><p>在path环境变量中，加入 %MAVEN_HOME%\bin</p></li></ol><p><img src="/2023/05/25/Maven/image-20230114163344461.png" alt="image-20230114163344461" style="zoom:33%;"><img src="/2023/05/25/Maven/image-20230114163406595.png" alt="image-20230114163406595" style="zoom:50%;"></p><ol><li><p>测试maven的安装。 在命令行执行 mvn -v</p><p><img src="/2023/05/25/Maven/image-20230114163540660.png" alt="image-20230114163540660"></p></li></ol><p>maven解压后的目录结构</p><img src="/2023/05/25/Maven/image-20201015162301261.png" alt="image-20201015162301261" style="zoom: 80%;"><h2 id="三-在idea中使用Maven"><a href="#三-在idea中使用Maven" class="headerlink" title="三.在idea中使用Maven"></a>三.在idea中使用Maven</h2><h3 id="1-idea中集成maven"><a href="#1-idea中集成maven" class="headerlink" title="1.idea中集成maven"></a>1.idea中集成maven</h3><p>idea中有一个自带的maven。  我们要让idea使用自己安装的maven。</p><h4 id="1-1选择File-Settings"><a href="#1-1选择File-Settings" class="headerlink" title="1.1选择File- Settings"></a>1.1选择File- Settings</h4><p><img src="/2023/05/25/Maven/mage-20201016151034872.png" alt="image-20201016151034872"></p><p><img src="/2023/05/25/Maven/image-20201016151528678.png" alt="image-20201016151528678"></p><p>设置项： -DarchetypeCatalog&#x3D;internal</p><h4 id="1-2File-Other-Settings"><a href="#1-2File-Other-Settings" class="headerlink" title="1.2File - Other Settings"></a>1.2File - Other Settings</h4><p><img src="/2023/05/25/Maven/image-20201016151823967.png" alt="image-20201016151823967"></p><p>同上的设置</p><h4 id="1-3-创建基于maven的普通java项目"><a href="#1-3-创建基于maven的普通java项目" class="headerlink" title="1.3 创建基于maven的普通java项目"></a>1.3 创建基于maven的普通java项目</h4><p><img src="/2023/05/25/Maven/image-20201016161028977.png" alt="image-20201016161028977"></p><p>或者</p><p><img src="/2023/05/25/Maven/image-20230113091127225.png" alt="image-20230113091127225"></p><h3 id="1-4-创建web项目"><a href="#1-4-创建web项目" class="headerlink" title="1.4 创建web项目"></a>1.4 创建web项目</h3><p><img src="/2023/05/25/Maven/image-20201016170153694.png" alt="image-20201016170153694"></p><h3 id="1-5-导入module到idea"><a href="#1-5-导入module到idea" class="headerlink" title="1.5 导入module到idea"></a>1.5 导入module到idea</h3><p><img src="/2023/05/25/Maven/image-20201017085816226.png" alt="image-20201017085816226"></p><h2 id="四-使用Maven"><a href="#四-使用Maven" class="headerlink" title="四.使用Maven"></a>四.使用Maven</h2><h3 id="1-Maven中使用单元测试"><a href="#1-Maven中使用单元测试" class="headerlink" title="1 Maven中使用单元测试"></a>1 Maven中使用单元测试</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/image-20230104150247960.png" alt="image-20230104150247960"></p><h3 id="2-Maven中加入servlet"><a href="#2-Maven中加入servlet" class="headerlink" title="2 Maven中加入servlet"></a>2 Maven中加入servlet</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--JSP--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Servlet --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/05/25/Maven/image-20230111100336490.png" alt="image-20230111100336490"></p><h3 id="3-Maven中加入JDBC"><a href="#3-Maven中加入JDBC" class="headerlink" title="3 Maven中加入JDBC"></a>3 Maven中加入JDBC</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.31<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五-Maven的核心概念"><a href="#五-Maven的核心概念" class="headerlink" title="五.Maven的核心概念"></a>五.Maven的核心概念</h2><h3 id="1-约定的目录结构"><a href="#1-约定的目录结构" class="headerlink" title="1 约定的目录结构"></a>1 约定的目录结构</h3><p>maven项目使用的大多人 遵循的目录结构。 叫做约定的目录结构。</p><p>一个maven项目是一个文件夹。 比如项目叫做Hello</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Hello 项目文件夹</span><br><span class="line">    \src</span><br><span class="line">    \main叫做主程序目录（完成项目功能的代码和配置文件）</span><br><span class="line">             \java          源代码（包和相关的类定义）</span><br><span class="line">     \resources    配置文件</span><br><span class="line">    \test               放置测试程序代码的（开发人员自己写的测试代码）</span><br><span class="line">     \java          测试代码的（junit）</span><br><span class="line">     \resources     测试程序需要的配置文件</span><br><span class="line">    \pom.xml                maven的配置文件， 核心文件</span><br></pre></td></tr></table></figure><p>maven的使用方式：</p><p>1）maven可以独立使用： 创建项目，编译代码，测试程序，打包，部署等等</p><p>2）maven和idea一起使用：通过idea借助maven，实现编码，测试，打包等等</p><h3 id="2-POM"><a href="#2-POM" class="headerlink" title="2 POM"></a>2 POM</h3><p>POM： Project Object Model 项目对象模型， maven把项目当做模型处理。 操作这个模型就是操作项目。</p><p>maven通过pom.xml文件实现 项目的构建和依赖的管理。</p><p>maven依赖：<a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- project是根标签， 后面的是约束文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">  <span class="comment">&lt;!-- pom模型的版本， 就是4.0.0 --&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 坐标 --&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.blb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ch01-maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-坐标"><a href="#3-坐标" class="headerlink" title="3 坐标"></a>3 坐标</h3><p>坐标组成是 groupid, artifiactId, version。  坐标概念来自数学。·</p><p>坐标作用：确定资源的，是资源的唯一标识。 在maven中，每个资源都是坐标。 坐标值是唯一的。简称叫gav</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.blb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ch01-maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">groupId: 组织名称，代码。 公司，团体或者单位的标识。 这个值常使用的公司域名的倒写。</span><br><span class="line">         例如：www.bilibili.com, groupId: com.bilibili</span><br><span class="line"></span><br><span class="line">         如果项目规模比较大， 也可以是 域名倒写+大项目名称。</span><br><span class="line">     例如： www.baidu.com ,  无人车： com.baidu.appollo</span><br><span class="line">artifactId:项目名称， 如果groupId中有项目， 此时当前的值就是子项目名。 项目名称是唯一的。</span><br><span class="line">version：版本， 项目的版本号， 使用的数字。 三位组成。 例如 主版本号.次版本号.小版本号， 例如： 5.2.5。</span><br><span class="line">         注意：版本号中有-SNAPSHOT， 表示快照，不是稳定的版本。      </span><br><span class="line">   </span><br><span class="line">packaging 项目打包的类型， 有jar ，war， ear， pom等等 默认是jar</span><br></pre></td></tr></table></figure><p>项目使用gav：</p><p>1.每个maven项目，都需要有一个自己的gav</p><p>2.管理依赖，需要使用其他的jar ，也需要使用gav作为标识。</p><p>搜索坐标的地址： <a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><h3 id="4-依赖-dependency"><a href="#4-依赖-dependency" class="headerlink" title="4 依赖 dependency"></a>4 依赖 dependency</h3><p>依赖：项目中要使用的其他资源（jar）。  </p><p>需要使用maven表示依赖，管理依赖。 通过使用dependency和gav一起完成依赖的使用</p><p>需要在pom.xml文件中，使用dependencies 和dependency， 还有gav 完成依赖的说明。</p><p>格式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- mysql驱动 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">maven使用gav作为标识，从互联网下载依赖的jar。 下载到你的本机上。  由maven管理项目使用的这些jar</span><br></pre></td></tr></table></figure><h3 id="5-仓库"><a href="#5-仓库" class="headerlink" title="5 仓库"></a>5 仓库</h3><p>仓库是存东西的，maven的仓库存放的是： </p><ol><li><p>maven工具自己的jar包。</p></li><li><p>第三方的其他jar， 比如项目中要使用mysql驱动。</p></li><li><p>自己写的程序，可以打包为jar 。 存放到仓库。</p></li></ol><p>仓库的分类：</p><ol><li><p>本地仓库（本机仓库）： 位于你自己的计算机， 它是磁盘中的某个目录。</p><p>本地仓库：默认路径，是你登录操作系统的账号的目录中&#x2F;.m2&#x2F;repository</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\admin\.m2\repository</span><br></pre></td></tr></table></figure><p>修改本地仓库的位置：修改maven工具的配置文件（maven的安装路径\conf\setting.xml）</p><p>​步骤：</p><p>​     1）创建一个目录，作为仓库使用。  目录不要有中文和空格。 目录不要太深。</p><p>​   例如： D:\openrepository</p><p>​     2）修改setting.xml文件，指定 D:\openrepository这个目录</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:/openrepository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将仓库的资源 拷贝到 D:&#x2F;openrepository</li></ol></li><li><p>远程仓库： 需要通过联网访问的</p><p>1）中央仓库： 一个ftp服务器， 存放了所有的资源。 </p><p>2）中央仓库的镜像： 就是中央仓库的拷贝。 在各大主要城市都有镜像。</p><p>3）私服：在局域网中使用的。 私服就是自己的仓库服务器。 在公司内部使用的。</p></li></ol><p>maven使用仓库： maven自动使用仓库， 当项目启动后， 执行了maven的命令， maven首先访问的是本地仓库， 从仓库中获取所需的jar， 如果本地仓库没有 ，需要访问私服或者中央仓库或者镜像。</p><p><img src="/2023/05/25/Maven/image-20201016114322189.png" alt="image-20201016114322189"></p><h3 id="6-maven的生命周期，插件和命令"><a href="#6-maven的生命周期，插件和命令" class="headerlink" title="6 maven的生命周期，插件和命令"></a>6 maven的生命周期，插件和命令</h3><p>maven的生命周期： 项目构建的各个阶段。 包括 清理， 编译， 测试，报告，打包，安装，部署</p><p>插件：要完成构建项目的各个阶段，要使用maven的命令， 执行命令的功能是通过插件完成的。插件就是jar，一些类。</p><p>命令： 执行maven功能是 由命令发出的。 比如 mvn compile</p><p>单元测试（junit）：</p><p>junit是一个单元测试的工具， 在java中经常使用。</p><p>单元：在java中指的是方法。  一个方法就是一个单元， 方法是测试的最小单位。</p><p>作用：使用junit去测试方法是否完成了要求。 开发人员自测。</p><p>使用单元测试：</p><p>1）加入junit的依赖（一些类和方法）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2)在src&#x2F;test&#x2F;java 目录中创建测试类文件。 写测试代码</p><p>   单元测试使用的建议：</p><p>​    1.测试类的定义， 名称一般是Test+要测试的类名称</p><p>​    2.测试类它的包名和要测试的类包名一样。</p><p>​    3.在类中定义方法，要测试代码。</p><p>​       方法的定义：public方法， </p><p>​                               没有返回值</p><p>​                               方法名称自定义（建议 Test+测试的方法名称）</p><p>​                               方法没有参数</p><p>   4.在测试类中的方法，可以单独执行。 测试类也可以单独执行</p><p>   5.在方法的上面加入@Test</p><p>命令：</p><p>1） mvn clean: 清理命令， 作用删除以前生成的数据， 删除target目录。</p><p>​      插件： maven-clean-plugin   ， 版本是 2.5</p><p>2）mvn compile:编译命令，执行的代码编译， 把src&#x2F;main&#x2F;java目录中的java代码编译为class文件。</p><p>​     同时把class文件拷贝到 target&#x2F;classes目录。 这个目录classes是存放类文件的根目录（也叫做类路径，classpath）</p><p>​    插件： maven-compiler-plugin 版本3.1。  编译代码的插件</p><p>​                maven-resources-plugin 版本2.6 。 资源插件， 处理文件的。 作用是把src&#x2F;main&#x2F;resources目录中的                </p><p>​                                                             文件拷贝target&#x2F;classes目录中。</p><p>3）mvn test-compile: 编译命令， 编译src&#x2F;test&#x2F;java目录中的源文件， 把生成的class拷贝到target&#x2F;test-classes目录。同时把src&#x2F;test&#x2F;resources目录中的文件拷贝到 test-clasess目录</p><p>​    插件： maven-compiler-plugin 版本3.1。  编译代码的插件</p><p>​                maven-resources-plugin 版本2.6 。 资源插件， 处理文件的</p><p>4）mvn test:测试命令， 作用执行 test-classes目录的程序， 测试src&#x2F;main&#x2F;java目录中的主程序代码是否符合要求。</p><p>​     插件： maven-surefire-plugin 版本 2.12.4</p><p>5）mvn package:打包，作用是把项目中的资源class文件和配置文件都放到一个压缩文件中， 默认压缩文件是jar类型的。 web应用是war类型， 扩展是jar，war的。</p><p>​    插件：maven-jar-plugin 版本 2.4。 执行打包处理。 生成一个jar扩展的文件， 放在target目录下.</p><p>​               打包的文件包含的是 src&#x2F;main目录中的所有的生成的class和配置文件和test无关。</p><p>​    生成的是 ch01-maven-1.0-SNAPSHOT.jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.blb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ch01-maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">打包的文件名： artifactId-version.packaging</span><br></pre></td></tr></table></figure><p>6）mvn install : 把生成的打包的文件 ，安装到maven仓库。</p><p>​     插件： maven-install-plugin 版本 2.4 。 把生成的jar文件安装到本地仓库。 </p><p>​    查看查看中的jar文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.blb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ch01-maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">groupId中的值， 如果有 &quot;.&quot; 前和后都是独立的文件夹。 com\blb</span><br><span class="line">artifactId, 独立的文件夹</span><br><span class="line">version，独立的文件夹</span><br></pre></td></tr></table></figure><h1 id><a href="#" class="headerlink" title></a></h1><h2 id="六-依赖管理"><a href="#六-依赖管理" class="headerlink" title="六. 依赖管理"></a>六. 依赖管理</h2><p>依赖范围：使用scope表示依赖的范围。 </p><p>依赖范围表示： 这个依赖（jar和里面类）在项目构建的那个阶段起作用。</p><p>依赖范围scope ：</p><p>​     compile:默认， 参与构建项目的所有阶段</p><p>​     test：测试，在测试阶段使用， 比如执行mvn test会使用junit 。</p><p>​    provided: 提供者。 项目在部署到服务器时，不需要提供这个依赖的jar ， 而是由服务器这个依赖的jar包</p><p>​  明显的是servlet 和jsp 依赖</p><h2 id="七-常用设置"><a href="#七-常用设置" class="headerlink" title="七. 常用设置"></a>七. 常用设置</h2><p>1)讲的是properties它里面的配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span> 源码编译 jdk 版本</span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span> 运行代码的 jdk 版本</span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span> 项目</span><br><span class="line">构建使用的编码，避免中文乱码</span><br><span class="line"><span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8</span><br><span class="line"><span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span> 生成报告的编码</span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>全局变量</li></ol><p>在properties定义标签，这个标签就是一个变量， 标签的文本就是变量的值。 </p><p>使用全局变量表示 多个依赖使用的版本号。</p><p>使用步骤：</p><p>1.在properties标签中，定义一个标签，指定版本的值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--自定义变量--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用全局变量， 语法 ${变量名}</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3）使用资源插件</p><p>处理的配置文件的信息， maven默认处理配置文件</p><p>①：maven会把src&#x2F;main&#x2F;resources目录中的文件， 拷贝到target&#x2F;classes目录下</p><p>②：maven只处理src&#x2F;main&#x2F;java目录中的 .java文件，把这些java文件编译为class，拷贝到 target&#x2F;classes目录中。 不处理其他文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--资源插件</span></span><br><span class="line"><span class="comment">      告诉maven把 src/main/java目录中的 指定扩展名的文件 拷贝到 target/classes目录中。</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span><span class="comment">&lt;!--所在的目录--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--包括目录下的.properties,.xml 文件都会扫描到--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  filtering 选项 false 不启用过滤器， *.property 已经起到过</span></span><br><span class="line"><span class="comment">        滤的作用了 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;day01-Maven&quot;&gt;&lt;a href=&quot;#day01-Maven&quot; class=&quot;headerlink&quot; title=&quot;day01-Maven&quot;&gt;&lt;/a&gt;day01-Maven&lt;/h1&gt;&lt;h2 id=&quot;一-Maven简介&quot;&gt;&lt;a href=&quot;#一-Maven简介&quot; class=&quot;headerlink&quot; title=&quot;一.Maven简介&quot;&gt;&lt;/a&gt;一.Maven简介&lt;/h2&gt;&lt;h3 id=&quot;1-Maven是什么？&quot;&gt;&lt;a href=&quot;#1-Maven是什么？&quot; class=&quot;headerlink&quot; title=&quot;1.Maven是什么？&quot;&gt;&lt;/a&gt;1.Maven是什么？&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>spring笔记</title>
    <link href="http://example.com/2023/05/25/Spring/"/>
    <id>http://example.com/2023/05/25/Spring/</id>
    <published>2023-05-25T07:34:21.000Z</published>
    <updated>2023-06-07T06:27:17.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spring笔记"><a href="#spring笔记" class="headerlink" title="spring笔记"></a>spring笔记</h1><h4 id="黑马程序员SSM框架教程-Spring-SpringMVC-Maven高级-SpringBoot-MyBatisPlus"><a href="#黑马程序员SSM框架教程-Spring-SpringMVC-Maven高级-SpringBoot-MyBatisPlus" class="headerlink" title="黑马程序员SSM框架教程_Spring+SpringMVC+Maven高级+SpringBoot+MyBatisPlus"></a>黑马程序员SSM框架教程_Spring+SpringMVC+Maven高级+SpringBoot+MyBatisPlus</h4><span id="more"></span><h5 id="一、初识spring————–spring-io"><a href="#一、初识spring————–spring-io" class="headerlink" title="一、初识spring————–spring.io"></a>一、初识spring————–<a href="%E5%AE%98%E7%BD%91">spring.io</a></h5><p><img src="/2023/05/25/Spring/image-20230316164101841.png"></p><p>   Ioc:控制反转</p><p>​        *使用对象时，由主动new产生的对象转换为外部提供的对象，此过程中对象创建控制权由程序转移到外部，    spring提供了一个容器，称为Ioc容器，用来充当Ioc思想的外部</p><p>DI依赖注入</p><p>​     *在容器中建立bean与bean之间的依赖关系的整个过程称为依赖注入</p><p><strong>核心概念</strong>：充分解耦</p><ul><li><p>​     使用Ioc容器管理bean（Ioc）</p></li><li><p>​     在Ioc容器内将依赖关系bean进行关系绑定  （DI）</p></li></ul><h5 id="二、入门案列"><a href="#二、入门案列" class="headerlink" title="二、入门案列"></a>二、入门案列</h5><h6 id="IoC入门案例"><a href="#IoC入门案例" class="headerlink" title="IoC入门案例"></a>IoC入门案例</h6><p>1.在pom.xml中配置Spring</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;<span class="number">5.2</span><span class="number">.11</span>.RELEASE&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;<span class="number">4.11</span>&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.在applicationContext.xml中配置Bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="line">       xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;bookDao&quot;</span> class=<span class="string">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>&gt;&lt;/bean&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;bookService&quot;</span> class=<span class="string">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span>&gt;&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p>3.获取ioc容器</p><p><img src="/2023/05/25/Spring/image-20230316173927374.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"><span class="keyword">import</span> com.itheima.service.BookService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//3.获取Ioc容器</span></span><br><span class="line">        ApplicationContext ly=<span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line"><span class="comment">//        BookDao bookDao = (BookDao) ly.getBean(&quot;bookDao&quot;);</span></span><br><span class="line"><span class="comment">//        bookDao.save();</span></span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> (BookService) ly.getBean(<span class="string">&quot;bookService&quot;</span>);</span><br><span class="line">        bookService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"><span class="keyword">import</span> com.itheima.service.BookService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//3.获取Ioc容器</span></span><br><span class="line">        ApplicationContext ly=<span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line"><span class="comment">//        BookDao bookDao = (BookDao) ly.getBean(&quot;bookDao&quot;);</span></span><br><span class="line"><span class="comment">//        bookDao.save();</span></span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> (BookService) ly.getBean(<span class="string">&quot;bookService&quot;</span>);</span><br><span class="line">        bookService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="Io入门案例"><a href="#Io入门案例" class="headerlink" title="Io入门案例"></a>Io入门案例</h6><p>业务层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> com.itheima.dao.impl.BookDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.itheima.service.BookService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"> <span class="comment">//5.删除业务层中使用new的方式创建的Dao</span></span><br><span class="line">   <span class="comment">// private BookDao bookDao=  new BookDaoImpl();</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;book servlet save----&quot;</span>);</span><br><span class="line">    bookDao.save();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6.提供对应的set方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBookDao</span><span class="params">(BookDao bookDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.bookDao = bookDao;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="line">       xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span><br><span class="line">    &lt;bean id=<span class="string">&quot;bookDao&quot;</span> class=<span class="string">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>&gt;&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id=<span class="string">&quot;bookService&quot;</span> class=<span class="string">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span>&gt;</span><br><span class="line">&lt;!--         配置servlet和dao的关系--&gt;</span><br><span class="line">&lt;!--        property标签表示配置当前bean的属性--&gt;</span><br><span class="line">&lt;!--        name属性表示配置哪一个具体属性--&gt;</span><br><span class="line">&lt;!--        ref表示参照哪一个bean--&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;bookDao&quot;</span> ref=<span class="string">&quot;bookDao&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/05/25/Spring/image-20230316164101842.png" alt="image-20230316182531574"></p><h5 id="三、-bean的实例化"><a href="#三、-bean的实例化" class="headerlink" title="三、 bean的实例化"></a>三、 bean的实例化</h5>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;spring笔记&quot;&gt;&lt;a href=&quot;#spring笔记&quot; class=&quot;headerlink&quot; title=&quot;spring笔记&quot;&gt;&lt;/a&gt;spring笔记&lt;/h1&gt;&lt;h4 id=&quot;黑马程序员SSM框架教程-Spring-SpringMVC-Maven高级-SpringBoot-MyBatisPlus&quot;&gt;&lt;a href=&quot;#黑马程序员SSM框架教程-Spring-SpringMVC-Maven高级-SpringBoot-MyBatisPlus&quot; class=&quot;headerlink&quot; title=&quot;黑马程序员SSM框架教程_Spring+SpringMVC+Maven高级+SpringBoot+MyBatisPlus&quot;&gt;&lt;/a&gt;黑马程序员SSM框架教程_Spring+SpringMVC+Maven高级+SpringBoot+MyBatisPlus&lt;/h4&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>jsp的使用</title>
    <link href="http://example.com/2023/05/25/javaWeb_jsp/"/>
    <id>http://example.com/2023/05/25/javaWeb_jsp/</id>
    <published>2023-05-25T07:34:21.000Z</published>
    <updated>2023-06-05T05:08:23.267Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jsp使用"><a href="#jsp使用" class="headerlink" title="jsp使用"></a>jsp使用</h1><span id="more"></span><h3 id="一-JSP脚本分类"><a href="#一-JSP脚本分类" class="headerlink" title="一.JSP脚本分类"></a>一.JSP脚本分类</h3><p>​           1.&lt;%…%&gt;内容会放入   _jspServlet()方法中   ——  页面输出</p><p>​            2.&lt;%&#x3D;…%&gt;内容会放入out.print()中，作为  out.print()的参数  ——out.print(“hello”)</p><p>​           3.&lt;%!…%&gt;内容会放入  _jspServlet()方法之外，被类直接包含 ——可以写类，定义字符串</p><h3 id="二-EL表达式-Expression-Language-获取数据"><a href="#二-EL表达式-Expression-Language-获取数据" class="headerlink" title="二.EL表达式(Expression Language)获取数据"></a>二.EL表达式(Expression Language)获取数据</h3><p>​       语法： ${expression}</p><p>​                   eg: ${brands}获取域中存储kay为brands的数据</p><h3 id="三-JSTL标签，使用标签代替jsp上面的代码"><a href="#三-JSTL标签，使用标签代替jsp上面的代码" class="headerlink" title="三.JSTL标签，使用标签代替jsp上面的代码"></a>三.JSTL标签，使用标签代替jsp上面的代码</h3><p>​       <img src="/2023/05/25/javaWeb_jsp/typora\图\Snipaste_2022-11-14_21-48-55.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;jsp使用&quot;&gt;&lt;a href=&quot;#jsp使用&quot; class=&quot;headerlink&quot; title=&quot;jsp使用&quot;&gt;&lt;/a&gt;jsp使用&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>javaweb大二复习</title>
    <link href="http://example.com/2023/05/25/javaweb%E5%A4%A7%E4%BA%8C%E5%A4%8D%E4%B9%A0/"/>
    <id>http://example.com/2023/05/25/javaweb%E5%A4%A7%E4%BA%8C%E5%A4%8D%E4%B9%A0/</id>
    <published>2023-05-25T07:34:21.000Z</published>
    <updated>2023-06-07T06:40:27.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="javaweb大二复习"><a href="#javaweb大二复习" class="headerlink" title="javaweb大二复习"></a>javaweb大二复习</h1><h2 id><a href="#" class="headerlink" title></a></h2><h3 id="1-简述Web技术包括内容，以及分别指什么"><a href="#1-简述Web技术包括内容，以及分别指什么" class="headerlink" title="1.简述Web技术包括内容，以及分别指什么"></a>1.简述Web技术包括内容，以及分别指什么</h3><span id="more"></span><p>1.web客户端技术：</p><p>​     html语言 css样式表 客户端脚本语言</p><p>2.web服务器端技术</p><p>​    ASP技术 JSP技术PHP技术</p><h3 id="2-简述什么是jdbc"><a href="#2-简述什么是jdbc" class="headerlink" title="2.简述什么是jdbc"></a>2.简述什么是jdbc</h3><p>它提供了一系列dAPI，用java语言编写的代码连接数据库，对数据进行添加删除，修改和查询</p><h3 id="3-简述jdbc的操作流程"><a href="#3-简述jdbc的操作流程" class="headerlink" title="3.简述jdbc的操作流程"></a>3.简述jdbc的操作流程</h3><p>1.加载JDBC的数据库驱动</p><p>2.建立数据库连接</p><p>3.创建增删改代码</p><p>4.执行语句</p><p>5.处理结果</p><p>6.关闭连接</p><h3 id="4-简述servlet的基本运行流程"><a href="#4-简述servlet的基本运行流程" class="headerlink" title="4.简述servlet的基本运行流程"></a>4.简述servlet的基本运行流程</h3><p>1.web向Servlet容器发出Http请求</p><p>2.Servlet容器（tomcat）解析请求</p><p>3.Servlet容器创建一个HttpRequest对象,封装Http请求</p><p>4.servlet容器创建一个HttpResponse对象</p><p>5.servlet容器调用httpservlet的servlet方法把HttpRequest和HttpResponse对象作为servlet方法参数传给HttpServlet对象</p><p>6HttpServlet调用HttpRequest的有关方法，获取Http请求信息</p><p>7.httpServlet调用HttpReasonse的有关方法，生成响应数据</p><h3 id="5-简述转发与重定向的各自特点"><a href="#5-简述转发与重定向的各自特点" class="headerlink" title="5.简述转发与重定向的各自特点"></a>5.简述转发与重定向的各自特点</h3><p>转发：</p><p>​         1.地址栏路径不变</p><p>​           2.只能访问当前服务器下的资源</p><p>​          3.转发是一次请求，可以使用request对象来共享数据</p><p>重定向;</p><p>​       1.地址栏发生变化</p><p>​       2。重定向可以访问其他站点的资源</p><p>​        3.重定向是两次请求</p><p>​       3.不能使用request对象来共享数据</p><h3 id="6-简述jsp网页展示过程"><a href="#6-简述jsp网页展示过程" class="headerlink" title="6.简述jsp网页展示过程"></a>6.简述jsp网页展示过程</h3><p>1.客户端通过浏览器向服务器发出请求，在该请求中包含了请求的资源的路径，这样当服务器接收到该请求后就可以知道被请求的内容。<br>2.服务器根据接收到的客户端的请求来加载相应的JSP文件。<br>3.Web服务器中的JSP引擎会将被加载的JSP文件转化为Servlet。<br>4.JSP引擎将生成的Servlet代码编译成Class文件。<br>5.服务器执行这个Class文件。<br>6.最后服务器将执行结果发送给浏览器进行显示。</p><h3 id="7-简述jsp页面的组成——html-java代码段-标签"><a href="#7-简述jsp页面的组成——html-java代码段-标签" class="headerlink" title="7.简述jsp页面的组成——html+java代码段+标签"></a>7.简述jsp页面的组成——html+java代码段+标签</h3><p>由静态内容和动态内容构成。其中，静态内容指HTML元素，动态内容（JSP元素）包括指令元素、脚本元素、动作元素、注释等内容。</p><h3 id="8-简述Servlet和jsp的关系"><a href="#8-简述Servlet和jsp的关系" class="headerlink" title="8.简述Servlet和jsp的关系"></a>8.简述Servlet和jsp的关系</h3><p>1.联系：</p><p>  jSP文件在容器中会转换成Servlet执行。</p><p>JSP是对Servlet的一种高级封装，本质还是Servlet。</p><p>2.区别：</p><p>JSP可以很方便地编写或者修改HTML网页而不用去面对大量的println语句。</p><h3 id="9-jsp页面的9个内置对象的功能简述—-p39"><a href="#9-jsp页面的9个内置对象的功能简述—-p39" class="headerlink" title="9.jsp页面的9个内置对象的功能简述—-p39"></a>9.jsp页面的9个内置对象的功能简述—-p39</h3><p>request：取得客户端与系统的信息</p><p>response：响应客户端的信息</p><p>application：记录与处理上线者共享的数据</p><p>session：记录与处理上线者的个别数据</p><p>out:控制数据的输出操作</p><p>config：取得jsp编译后的Servlet的信息</p><p>pageContext：存取和处理系统运行时的各种信息</p><p>page：代表目前的这个JSP网页对象</p><p>exception：处理异常机制</p><h3 id="10-列出内置对象的作用域–p39"><a href="#10-列出内置对象的作用域–p39" class="headerlink" title="10.列出内置对象的作用域–p39"></a>10.列出内置对象的作用域–p39</h3><p>request—-reqest</p><p>repose– page</p><p>application– page</p><p>session– session</p><p>out– application</p><p>config– page</p><p>pageContext– page</p><p>page– page</p><p>exception– page</p><h3 id="11简述jsp静态注释和动态注释的区别及用法"><a href="#11简述jsp静态注释和动态注释的区别及用法" class="headerlink" title="11简述jsp静态注释和动态注释的区别及用法"></a>11简述jsp静态注释和动态注释的区别及用法</h3><p>1.静态注释：<!--  -->,这种注释方法是对jsp中的静态代码进行的注释，是html的原生注释，这种注释方式会将其所注释的内容原封不动的发送到浏览器，通过查看源码即可看到所注释的内容。<br>   对动态代码加静态注释会产生错误</p><p>2.jsp特有的注释：其使用的语法是&lt;%–  –%&gt;.这种注释方式，tomcat会进行处理，不会将其发送到浏览器中。</p><h3 id="-1"><a href="#-1" class="headerlink" title></a></h3>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;javaweb大二复习&quot;&gt;&lt;a href=&quot;#javaweb大二复习&quot; class=&quot;headerlink&quot; title=&quot;javaweb大二复习&quot;&gt;&lt;/a&gt;javaweb大二复习&lt;/h1&gt;&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;1-简述Web技术包括内容，以及分别指什么&quot;&gt;&lt;a href=&quot;#1-简述Web技术包括内容，以及分别指什么&quot; class=&quot;headerlink&quot; title=&quot;1.简述Web技术包括内容，以及分别指什么&quot;&gt;&lt;/a&gt;1.简述Web技术包括内容，以及分别指什么&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
